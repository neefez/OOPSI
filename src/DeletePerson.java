
import java.util.InputMismatchException;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author neefez
 */
public class DeletePerson extends StartFrame {

    /**
     * Creates new form DeletePerson
     */
    public DeletePerson() {
        initComponents();
    }
    
    public static String tempID;
    public static int id;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        idField = new javax.swing.JTextField();
        EnterButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Please enter a person's ID");

        EnterButton.setText("Enter");
        EnterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnterButtonActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        jMenuItem1.setText("Quit");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(EnterButton)))
                .addContainerGap(118, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EnterButton))
                .addContainerGap(144, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
       System.exit(0);    
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void EnterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnterButtonActionPerformed
        // TODO add your handling code here:
       Department dep = (Department)depList.getFromIndex(StartFrame.index); 
        
       boolean valid = false;
       id = 404;
       tempID = "404";
       int role = 0;

       try
       { 
          tempID = idField.getText();
          valid = isIdFive(tempID);
          valid = isIdValid(tempID);
       }
       catch(InputMismatchException e)
       {
          new ValidDelete().setVisible(true);
          this.setVisible(false);
          valid = false;
       }         
       
       if(!valid)
          id = ValidDelete.getID();
       else
          id = Integer.parseInt(tempID);
       
       if(dep.peopleList.getItem(id) instanceof Student)
       {
          Student std = (Student)dep.peopleList.getItem(id);
          role = 1;
          dep.peopleList.remove(std);
       }    
       else if(dep.peopleList.getItem(id) instanceof Professor)
       {
          Professor prof = (Professor)dep.peopleList.getItem(id);
          dep.peopleList.remove(prof);
          role = 2;
       }    
       else
       {    
          valid = false;
          DeleteFail.setID(id);
          new DeleteFail().setVisible(true);
          this.setVisible(false);
       }
       
       if(dep.peopleList.getItem(id) instanceof Student)
       {    
          Student std = (Student)dep.peopleList.getItem(id);
          if(std == null)
          {      
             valid = false;
             DeleteFail.setID(id); 
             new DeleteFail().setVisible(true);          
             this.setVisible(false);
          }      
       }
       else if(dep.peopleList.getItem(id) instanceof Professor)
       {
          Professor prof = (Professor)dep.peopleList.getItem(id);
          if(prof == null)
          {
             valid = false;
             DeleteFail.setID(id);
             new DeleteFail().setVisible(true);
             this.setVisible(false);
          }    
       }    
       if(valid)
       {    
          new DeleteSuccess().setVisible(true);
          this.setVisible(false); 
          dep.numPeople--;
       }
    }//GEN-LAST:event_EnterButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DeletePerson.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DeletePerson.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DeletePerson.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeletePerson.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DeletePerson().setVisible(true);
            }
        });
    }
    
    public static int giveID()
    {
       return id;
    }
    
    public static void setID(int newID)
    {
      id = newID;
    }  
    
    /**
    * Checks to see if the id inputted is a number.
    * If the id is not a number, throws an exception.
    * @param tempId is the inputted id
    * @return true if tempId is a number, else throws an exception
    * @throws InputMismatchException for cases when tempId is not a number
    */
   public boolean isIdValid(String tempId) throws InputMismatchException
   {
      try
      {
         int i = Integer.parseInt(tempId);    
      }
      catch(Exception e)
      {    
         throw (new InputMismatchException("wrong character."));
      }
      
      return true;
   }
   
   /**
    * Checks to see if the inputted id is of length five.
    * Throws an exception if the id is too long or too short.
    * @param tempId is the inputted id
    * @return true if tempId is length five, else throws and exception
    * @throws InputMismatchException when length is not five
    */
   public boolean isIdFive(String tempId) 
                  throws InputMismatchException
   {
      int id = tempId.length();
      if (id != 5)
         throw (new InputMismatchException("the length of id has to be 5."));
       
      return true;
   }
     
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton EnterButton;
    private javax.swing.JTextField idField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    // End of variables declaration//GEN-END:variables
}
